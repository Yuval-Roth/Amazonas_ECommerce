import org.junit.Test;
import java.time.MonthDay;
import java.util.Arrays;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;


public class CompositeRulesTest {

    @Test
    public void testAndRule() {
        ShoppingCart cart = new ShoppingCart();
        cart.addProduct(new Product("1", "Tomato", 1.0, "Vegetable", "Fresh Tomato", 4, 3.0));
        cart.addProduct(new Product("2", "Cucumber", 1.0, "Vegetable", "Fresh Cucumber", 4, 2.5));

        PurchaseRule rule1 = new MaxWeightRule(5.0);
        PurchaseRule rule2 = new AgeRestrictionRule(18);
        PurchaseRule andRule = new AndRule(Arrays.asList(rule1, rule2));

        assertTrue(andRule.isSatisfied(cart, new User(20)));
        assertFalse(andRule.isSatisfied(cart, new User(17)));
    }

    @Test
    public void testOrRule() {
        ShoppingCart cart = new ShoppingCart();

        PurchaseRule rule1 = new TimeRestrictionRule(23);
        PurchaseRule rule2 = new DateRestrictionRule(MonthDay.of(1, 1));
        PurchaseRule orRule = new OrRule(Arrays.asList(rule1, rule2));

        // Assuming current time < 23:00 and current date is not 1st January
        assertTrue(orRule.isSatisfied(cart, new User(20)));
    }

    @Test
    public void testConditionalRule() {
        ShoppingCart cart = new ShoppingCart();
        cart.addProduct(new Product("1", "Tomato", 1.0, "Vegetable", "Fresh Tomato", 4, 6.0));

        PurchaseRule condition = new MaxWeightRule(5.0);
        PurchaseRule rule = new AgeRestrictionRule(18);
        PurchaseRule conditionalRule = new ConditionalRule(condition, rule);

        // Assuming total weight > 5.0 kg
        assertFalse(conditionalRule.isSatisfied(cart, new User(20)));
    }
}
