import org.junit.Test;
import java.time.MonthDay;
import java.util.Arrays;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class PurchaseRulesTest {

    @Test
    public void testMaxWeightRule() {
        ShoppingCart cart = new ShoppingCart();
        cart.addProduct(new Product("1", "Tomato", 1.0, "Vegetable", "Fresh Tomato", 4, 3.0));
        cart.addProduct(new Product("2", "Cucumber", 1.0, "Vegetable", "Fresh Cucumber", 4, 2.5));

        PurchaseRule rule = new MaxWeightRule(5.0);
        assertTrue(rule.isSatisfied(cart, new User(20)));

        cart.addProduct(new Product("3", "Watermelon", 3.0, "Fruit", "Fresh Watermelon", 4, 6.0));
        assertFalse(rule.isSatisfied(cart, new User(20)));
    }

    @Test
    public void testAgeRestrictionRule() {
        PurchaseRule rule = new AgeRestrictionRule(18);
        assertTrue(rule.isSatisfied(new ShoppingCart(), new User(20)));
        assertFalse(rule.isSatisfied(new ShoppingCart(), new User(17)));
    }

    @Test
    public void testTimeRestrictionRule() {
        PurchaseRule rule = new TimeRestrictionRule(23);
        assertTrue(rule.isSatisfied(new ShoppingCart(), new User(20))); // Assuming current time < 23:00
    }

    @Test
    public void testDateRestrictionRule() {
        PurchaseRule rule = new DateRestrictionRule(MonthDay.of(1, 1));
        // Assuming current date is not 1st January
        assertTrue(rule.isSatisfied(new ShoppingCart(), new User(20)));
    }
}
